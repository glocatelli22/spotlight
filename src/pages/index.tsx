
import Head from "next/head";

import { ShowObj, MovieObj, VideoObj } from "@/types";

import { 
  GET_POPULAR_MOVIES_HP,
  GET_POPULAR_SHOWS_HP, 
  DISCOVER_MOVIES_BASEURL,
  DISCOVER_SHOWS_BASEURL,
  fetchTMDB, 
  UPCOMING_MOVIES_QUERY,
  NOW_PLAYING_MOVIES_QUERY,
  SHOWS_ON_AIR_QUERY,
  GET_TRAILER_BASEURL
} from "@/tmdb";

import Featured from "@/components/homepage/Featured/Featured";
import NowPlaying from "@/components/homepage/NowPlaying";
import UpComing from "@/components/homepage/Upcoming";
import Roulette from "@/components/homepage/Roulette";


interface HomeProps {
  popularMovies: MovieObj[],
  popularShows: ShowObj[],
  currentMovies: MovieObj[],
  currentShows: ShowObj[],
  upComingMovie: MovieObj,
  upComigMovieVideos: VideoObj[]
};

export default function Home (props: HomeProps) {
  
  const { 
    popularMovies, 
    popularShows, 
    currentMovies, 
    currentShows, 
    upComingMovie, 
    upComigMovieVideos } = props;
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {currentMovies[0] &&
        <NowPlaying movie={currentMovies[0]} />
      }
      <div>
        <Featured title="Ultime uscite" link="/archivio/film/ultime-uscite" items={currentMovies} />
        <Featured title="In onda" link="/archivio/serie-tv/in-onda" items={currentShows} displaysShows={true} />
        <UpComing movie={upComingMovie} movieVideos={upComigMovieVideos} />
        <Featured title="Acclamati dal pubblico" link="/archivio/film/popolari" items={popularMovies} />
        <Featured title="Popolari" link="/archivio/serie-tv/popolari" items={popularShows} displaysShows={true} />
      </div>
    </>
  );
};

export const getStaticProps = async () => {
  
  
  const currentMovies = await fetchTMDB(DISCOVER_MOVIES_BASEURL, NOW_PLAYING_MOVIES_QUERY);
  const currentShows = await fetchTMDB(DISCOVER_SHOWS_BASEURL, SHOWS_ON_AIR_QUERY);
  
  const popularMovies = await fetchTMDB(GET_POPULAR_MOVIES_HP);
  const popularShows = await fetchTMDB(GET_POPULAR_SHOWS_HP);
  
  const upComingMovies = await fetchTMDB(DISCOVER_MOVIES_BASEURL, UPCOMING_MOVIES_QUERY);
  let upComingMovie = upComingMovies.results?.[0] || null;
  
  upComingMovie = upComingMovie?.id === currentMovies.results?.[0]?.id ? 
    upComingMovies.results?.[1] : upComingMovie;

  let upComigMovieVideos = null;
  if(upComingMovie?.id) {
    upComigMovieVideos = await fetchTMDB(GET_TRAILER_BASEURL(upComingMovie.id));
  }
  
  return {
    props: {
      upComingMovie: upComingMovie,
      upComigMovieVideos: upComigMovieVideos?.results || [],
      popularMovies: popularMovies?.results ?? [],
      popularShows: popularShows?.results ?? [],
      currentMovies: currentMovies?.results  ?? [],
      currentShows: currentShows?.results ?? []
    },
    revalidate: 86400
  }
};
